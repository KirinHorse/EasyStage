plugins {
    id 'java'
    id 'maven'
    id 'idea'
    id 'jacoco'
    id 'nebula.facet' version '3.3.0'
}

group = 'com.github.ayocrazy'
version = '0.0.1'
ext {
    appName = "EasyStage"
    gdxVersion = System.env.GDX_VERSION != null ? System.env.GDX_VERSION : '1.9.5'
    cglibVersion = '3.2.4'
}

repositories {
    jcenter()
    maven { url "https://jitpack.io/" }
}

configurations {
    providedCompile
}

dependencies {
    providedCompile "com.badlogicgames.gdx:gdx:$gdxVersion"
    providedCompile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    providedCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    compile "cglib:cglib:$cglibVersion"
    compile "com.github.tianqiujie:nativefont:2.4.4"
    testCompile 'junit:junit:4.12'
    testCompile "org.apache.commons:commons-io:1.3.2"
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile "com.badlogicgames.gdx:gdx-backend-jglfw:$gdxVersion"
}

sourceSets {
    main { compileClasspath += configurations.providedCompile }
    test { compileClasspath += configurations.providedCompile }
}

sourceCompatibility = JavaVersion.VERSION_1_7
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

facets {
    demo
}
task run(dependsOn: demoClasses, type: JavaExec) {
    main = "com.ayocrazy.easystage.DesktopLauncher"
    classpath = sourceSets.demo.runtimeClasspath
    standardInput = System.in
    workingDir = "$projectDir/src/demo/resources"
    jvmArgs = [ '-XstartOnFirstThread']
    ignoreExitValue = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

idea {
    module {
        [".gradle", ".idea", "build"].each {
            excludeDirs += file("$it")
        }
    }
}

jar {
    manifest {
        attributes "Manifest-Version": version;
    }
}

task packSources(type: Jar) {
    classifier = "sources"
    from files(sourceSets.main.allJava)
}

artifacts {
    archives jar
    archives packSources
}

